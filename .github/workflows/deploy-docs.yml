name: Deploy Docs to GitHub Pages

# Controls when the action will run.
# Triggers the workflow on push events to the main branch.
on:
  push:
    branches:
      - main # Or master, or your primary development branch
    paths: # Optional: Only run if docs or mkdocs.yml change
      - 'docs/**'
      - 'mkdocs.yml' # If your mkdocs.yml is in the root
      # If mkdocs.yml is in docs/, use 'docs/mkdocs.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-docs:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    # Grant GITHUB_TOKEN the permissions required to deploy to GitHub Pages
    permissions:
      contents: read  # To checkout the repository
      pages: write    # To deploy to GitHub Pages
      id-token: write # To authenticate with OpenID Connect (OIDC) if needed by your deployment method

    steps:
      # Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest version

      # Step 2: Set up Python
      # Use the Python version your mkdocs and plugins are compatible with
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # Step 3: Install MkDocs and dependencies
      # This should match how you install them locally (e.g., from pyproject.toml extras or a requirements_docs.txt)
      - name: Install MkDocs dependencies
        run: |
          pip install mkdocs mkdocs-material pymdown-extensions
          # If you have docs dependencies in pyproject.toml [project.optional-dependencies].docs_build:
          # pip install -e ".[docs_build]" 
          # Or if you have a dedicated requirements file for docs:
          # pip install -r docs/requirements_docs.txt 

      # Step 4: Build the MkDocs site
      # Ensure your mkdocs.yml is in the root or adjust path.
      # If mkdocs.yml is in docs/, use `mkdocs build --config-file docs/mkdocs.yml`
      - name: Build MkDocs site
        run: mkdocs build --config-file docs/mkdocs.yml --site-dir ./_site

      # Step 5: Upload GitHub Pages artifact
      # This step prepares the built site for the deployment action.
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_site # This now correctly points to the root _site directory

      # Step 6: Deploy to GitHub Pages
      # This action handles the deployment to the gh-pages branch or the Pages environment.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

        # No `with` section needed if deploying to the standard environment for the repository.
        # If deploying to a specific environment, you'd configure it here.